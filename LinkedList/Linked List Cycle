/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        // Set<ListNode>set=new HashSet<>();
        // for(ListNode curr=head;curr!=null;curr=curr.next){
        //     if(set.contains(curr))
        //      return true;
        //     set.add(curr);
        // }
        // return false;


        // ListNode dummy=new ListNode(0);
        // ListNode curr=head;
        // while(curr!=null){
        //     ListNode next=curr.next;
        //     if(curr.next==dummy)
        //      return true;
        //     if(curr.next==null)
        //       return false;
        //     curr.next=dummy;
        //     curr=next;
        // }
        // return false;

        
        // Floyd Cycle
        ListNode fast=head,slow=head;
        while(fast!=null && fast.next!=null){
            fast=fast.next.next;
            slow=slow.next;
            if(fast==slow)
              return true;
        }
        return false;
        
    }
}
 
