/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) { 
        if(left==right) return head;
        ListNode curr=head,prev=null,next=null;
        for(int i=0;i<left-1;i++){
             prev=curr;
             curr=curr.next;
        }
        ListNode last=prev;
        ListNode first=curr;
        int k=right-left+1;
       
        while(curr!=null && k>0){
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
            k--;
        }
        if(last!=null)
             last.next=prev;
        else
         head=prev;
        first.next=curr;
        return head;
        
    }
}
