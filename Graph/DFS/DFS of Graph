class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer>list=new ArrayList<>();
        boolean visited[]=new boolean[V];
        for(int i=0;i<N;i++){
            if(!visited[i])
              dfs(i,adj,list,visited);
        }
        
        return list;
    }
    void dfs(int Node,ArrayList<ArrayList<Integer>>adj, ArrayList<Integer>list,boolean visited[]){
       
             visited[Node]=true;
             list.add(Node);
             for(int i:adj.get(Node)){
                 if(!visited[i])
                  dfs(i,adj,list,visited);
             }
    }
}
