class Solution {
    public int numEnclaves(int[][] grid) {
        int count=0;
        int n=grid.length;
        int m=grid[0].length;
        int visited[][]=new int[n][m];
        
        // For First Row and Last Row
        for(int i=0;i<m;i++){
            if(grid[0][i]==1 && visited[0][i]==0)
              dfs(0,i,grid,visited);
            if(grid[n-1][i]==1 && visited[n-1][i]==0)
              dfs(n-1,i,grid,visited);
        }
        
        // For First Col and Last Col
        for(int j=0;j<n;j++){
          if(grid[j][0]==1 && visited[j][0]==0)
            dfs(j,0,grid,visited);
          if(grid[j][m-1]==1 && visited[j][m-1]==0)
            dfs(j,m-1,grid,visited);
        }

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1 &&  visited[i][j]==0)
                  count++;
            }
        }
       return count;
    }
    void dfs(int row,int col,int[][]grid,int[][]visited){
        visited[row][col]=1;
        int n=grid.length;
        int m=grid[0].length;

        int deltaRow[]={0,-1,0,1};
        int deltaCol[]={-1,0,1,0};

        for(int i=0;i<4;i++){
            int nrow=row+deltaRow[i];
            int ncol=col+deltaCol[i];

            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && visited[nrow][ncol]==0
            && grid[nrow][ncol]==1){
                visited[nrow][ncol]=1;
                dfs(nrow,ncol,grid,visited);
            }
        }
    }
}
